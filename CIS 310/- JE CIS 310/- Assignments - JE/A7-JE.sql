--Jacob Ellis
-- Assignment 7 
-- Due 10/20/11

--26
select	count(inv_number)as "number of invoices"
from	INVOICE



--27
select	count(cust_balance) as "Number of customers with balance greater than 500"
from	CUSTOMER
where	cust_balance > 500



--28
SELECT		CUST_CODE,INVOICE.INV_NUMBER, CONVERT(VARCHAR(20),INVOICE.INV_DATE,106)AS "INV_DATE",
			PROD_DESCRIPT, LINE.LINE_UNITS, LINE.LINE_PRICE

FROM		INVOICE INNER JOIN LINE ON INVOICE.INV_NUMBER=LINE.INV_NUMBER
			INNER JOIN PRODUCT ON LINE.P_CODE=PRODUCT.PROD_CODE
			
ORDER BY	CUST_CODE




--29
SELECT		CUST_CODE,INVOICE.INV_NUMBER, PROD_DESCRIPT, LINE.LINE_UNITS AS "UNITS BOUGHT", LINE.LINE_PRICE
			AS "UNIT PRICE", ROUND(LINE.LINE_UNITS*LINE.LINE_PRICE,2) AS "SUBTOTAL"
			
FROM		INVOICE INNER JOIN LINE
			ON INVOICE.INV_NUMBER=LINE.INV_NUMBER
			INNER JOIN PRODUCT ON LINE.P_CODE=PRODUCT.PROD_CODE
			
ORDER BY	CUST_CODE



--30 
SELECT		CUSTOMER.CUST_CODE,CUSTOMER.CUST_BALANCE, ROUND(SUM(LINE.LINE_UNITS*LINE.LINE_PRICE),2) AS "SUBTOTAL" 
FROM		CUSTOMER INNER JOIN INVOICE ON CUSTOMER.CUST_CODE=INVOICE.CUST_CODE
			INNER JOIN LINE ON INVOICE.INV_NUMBER=LINE.INV_NUMBER
	
GROUP BY	CUSTOMER.CUST_CODE,CUSTOMER.CUST_BALANCE



--31
SELECT		CUSTOMER.CUST_CODE,CUSTOMER.CUST_BALANCE, ROUND(SUM(LINE.LINE_UNITS*LINE.LINE_PRICE),2) AS "SUBTOTAL",
COUNT		(INVOICE.INV_NUMBER) AS "NUMBER OF PURCHASES"

FROM		CUSTOMER INNER JOIN INVOICE ON CUSTOMER.CUST_CODE=INVOICE.CUST_CODE
			INNER JOIN LINE ON INVOICE.INV_NUMBER=LINE.INV_NUMBER
	
GROUP BY	CUSTOMER.CUST_CODE,CUSTOMER.CUST_BALANCE


	
--32
SELECT		CUSTOMER.CUST_CODE,CUSTOMER.CUST_BALANCE, ROUND(SUM(LINE.LINE_UNITS*LINE.LINE_PRICE),2) AS "TOTAL PURCHASES",
			COUNT(INVOICE.INV_NUMBER) AS "NUMBER OF PURCHASES", 
			ROUND(SUM(LINE.LINE_UNITS*LINE.LINE_PRICE)/COUNT(INVOICE.INV_NUMBER),2) AS "AVERAGE PURCHASE AMOUNT"

FROM		CUSTOMER INNER JOIN INVOICE ON CUSTOMER.CUST_CODE=INVOICE.CUST_CODE
			INNER JOIN LINE ON INVOICE.INV_NUMBER=LINE.INV_NUMBER
	
GROUP BY	CUSTOMER.CUST_CODE,CUSTOMER.CUST_BALANCE

--33
SELECT		INVOICE.INV_NUMBER, ROUND(SUM(LINE.LINE_UNITS*LINE.LINE_PRICE),2) AS "INVOICE TOTAL"

FROM		INVOICE INNER JOIN LINE ON INVOICE.INV_NUMBER=LINE.INV_NUMBER

GROUP BY	INVOICE.INV_NUMBER

--34
SELECT		INVOICE.CUST_CODE,INVOICE.INV_NUMBER, ROUND(SUM(LINE.LINE_UNITS*LINE.LINE_PRICE),2) AS "INVOICE TOTAL"

FROM		INVOICE INNER JOIN LINE ON INVOICE.INV_NUMBER=LINE.INV_NUMBER

GROUP BY	INVOICE.INV_NUMBER, INVOICE.CUST_CODE

ORDER BY	INVOICE.CUST_CODE



--35
SELECT		INVOICE.CUST_CODE, COUNT(DISTINCT(INVOICE.INV_NUMBER)) AS "NUMBER OF INVOICES", 
			ROUND(SUM(LINE.LINE_UNITS*LINE.LINE_PRICE),2) AS "TOTAL NUMBER OF PURCHASES"

FROM		INVOICE INNER JOIN LINE ON INVOICE.INV_NUMBER=LINE.INV_NUMBER

GROUP BY	INVOICE.CUST_CODE

ORDER BY	INVOICE.CUST_CODE

--36
CREATE VIEW [NUMBER 35 TABLE] AS

SELECT		COUNT(DISTINCT(INVOICE.INV_NUMBER)) AS "NUMBER OF INVOICES", 
			ROUND(SUM(LINE.LINE_UNITS*LINE.LINE_PRICE),2) AS "TOTAL NUMBER OF PURCHASES"

FROM		INVOICE INNER JOIN LINE ON INVOICE.INV_NUMBER=LINE.INV_NUMBER

GROUP BY	INVOICE.CUST_CODE

		SELECT SUM("NUMBER OF INVOICES") AS "TOTAL INVOICES", SUM("TOTAL NUMBER OF PURCHASES") AS "TOTAL SALES",
				MIN("TOTAL NUMBER OF PURCHASES") AS "MIN SALE", MAX("TOTAL NUMBER OF PURCHASES") AS " MAX SALE",
				ROUND(AVG("TOTAL NUMBER OF PURCHASES"),2) AS "AVERAGE SALE"
		
		FROM [NUMBER 35 TABLE]

--37
SELECT		CUSTOMER.CUST_CODE, CUSTOMER.CUST_BALANCE

FROM		CUSTOMER INNER JOIN INVOICE ON CUSTOMER.CUST_CODE=INVOICE.CUST_CODE

GROUP BY	CUSTOMER.CUST_CODE, CUSTOMER.CUST_BALANCE

ORDER BY	CUSTOMER.CUST_CODE




--38
CREATE VIEW [BALANCES FOR CUSTOMERS WHO MADE PURCHASES] AS

SELECT		CUSTOMER.CUST_CODE, CUSTOMER.CUST_BALANCE

FROM		CUSTOMER INNER JOIN INVOICE ON CUSTOMER.CUST_CODE=INVOICE.CUST_CODE

GROUP BY	CUSTOMER.CUST_CODE, CUSTOMER.CUST_BALANCE

		SELECT	ROUND(MIN(CUST_BALANCE),2) AS "MINIMUM BALANCE", MAX(CUST_BALANCE) AS "MAXIMUM BALANCE",
				ROUND(AVG(CUST_BALANCE),2) AS "AVERAGE BALANCE"

		FROM	[BALANCES FOR CUSTOMERS WHO MADE PURCHASES]

--39
SELECT	ROUND(SUM(CUSTOMER.CUST_BALANCE),2) AS "TOTAL BALANCES", ROUND(MIN(CUSTOMER.CUST_BALANCE),2) AS "MINIMUM BALANCE", MAX(CUSTOMER.CUST_BALANCE) AS "MAXIMUM BALANCE",
		ROUND(AVG(CUSTOMER.CUST_BALANCE),2) AS "AVERAGE BALANCE"

FROM CUSTOMER 



--40
SELECT	CUSTOMER.CUST_CODE, CUSTOMER.CUST_BALANCE 

FROM	CUSTOMER 

WHERE	CUSTOMER.CUST_CODE NOT IN (SELECT CUST_CODE
									FROM INVOICE)
								

--41
SELECT	ROUND(SUM(CUST_BALANCE),2) AS "TOTAL BALANCES", MIN(CUST_BALANCE) AS "MINIMUM BALANCES",
		MAX(CUST_BALANCE)AS "MAXIMUM BALANCE" ,ROUND(AVG(CUST_BALANCE),2) AS "AVERAGE BALANCE"

FROM	CUSTOMER 

WHERE	CUSTOMER.CUST_CODE NOT IN (SELECT CUST_CODE
									FROM INVOICE)

--42
SELECT PROD_DESCRIPT, PROD_QOH, PROD_PRICE, (PROD_QOH*PROD_PRICE) AS "SUBTOTAL"
FROM PRODUCT

--43
SELECT ROUND(SUM(PROD_QOH*PROD_PRICE),2) AS "TOTAL VALUE OF INVENTORY"
FROM PRODUCT