-- Jake Ellis
-- Assignment 8

-- #1
SELECT	MERCHANDISE.ITEMID, MERCHANDISE.DESCRIPTION ,MERCHANDISE.LISTPRICE
FROM	PET..MERCHANDISE
WHERE	MERCHANDISE.LISTPRICE > (SELECT AVG(MERCHANDISE.LISTPRICE)
								FROM	PET..MERCHANDISE)
								
--#2
SELECT	CATEGORY, GENDER, avg(datediff(DD,ORDERDATE,SALEDATE)) AS "DIFFERENCE IN ORDER DATE AND SALE DATE"
FROM	PET..ANIMALORDER INNER JOIN PET..ANIMALORDERITEM ON ANIMALORDER.ORDERID=ANIMALORDERITEM.ORDERID
					INNER JOIN PET..ANIMAL ON ANIMALORDERITEM.ANIMALID=ANIMAL.ANIMALID
					INNER JOIN PET..SALEANIMAL ON ANIMAL.ANIMALID=SALEANIMAL.ANIMALID
					INNER JOIN PET..SALE ON SALEANIMAL.SALEID=SALE.SALEID
WHERE	 CATEGORY = 'CAT'
GROUP BY CATEGORY, GENDER


--#3
SELECT	ANIMAL.ANIMALID, ANIMAL.NAME, datediff(DD,ANIMALORDER.ORDERDATE,SALE.SALEDATE) AS "DELAY"
FROM	PET..ANIMALORDER INNER JOIN PET..ANIMALORDERITEM ON ANIMALORDER.ORDERID=ANIMALORDERITEM.ORDERID
					INNER JOIN PET..ANIMAL ON ANIMALORDERITEM.ANIMALID=ANIMAL.ANIMALID
					INNER JOIN PET..SALEANIMAL ON ANIMAL.ANIMALID=SALEANIMAL.ANIMALID
					INNER JOIN PET..SALE ON SALEANIMAL.SALEID=SALE.SALEID

WHERE CATEGORY='CAT' AND DATEDIFF(DD,ORDERDATE,SALEDATE) > (SELECT avg(datediff(DD,ORDERDATE,SALEDATE))
															FROM PET..ANIMALORDER INNER JOIN PET..ANIMALORDERITEM ON ANIMALORDER.ORDERID=ANIMALORDERITEM.ORDERID
															INNER JOIN PET..ANIMAL ON ANIMALORDERITEM.ANIMALID=ANIMAL.ANIMALID
															INNER JOIN PET..SALEANIMAL ON ANIMAL.ANIMALID=SALEANIMAL.ANIMALID
															INNER JOIN PET..SALE ON SALEANIMAL.SALEID=SALE.SALEID
															WHERE CATEGORY ='CAT')

															
									
--#4 
CREATE VIEW [NUMBER 4 VIEW] AS 
SELECT	MERCHANDISE.ITEMID, MERCHANDISE.DESCRIPTION, ROUND(AVG(ORDERITEM.COST),2)AS "AVERAGE COST", ROUND(AVG(SALEITEM.SALEPRICE),2)AS "AVERAGE SALE PRICE"
FROM	PET..ORDERITEM INNER JOIN PET..MERCHANDISE ON ORDERITEM.ITEMID=MERCHANDISE.ITEMID
				  INNER JOIN PET..SALEITEM ON MERCHANDISE.ITEMID=SALEITEM.ITEMID
GROUP BY MERCHANDISE.ITEMID, MERCHANDISE.DESCRIPTION
				
				  SELECT *
				  FROM [NUMBER 4 VIEW]
				  WHERE "AVERAGE COST" < 1.5*"AVERAGE SALE PRICE"



--#5
SELECT		EMPLOYEE.EMPLOYEEID, EMPLOYEE.LASTNAME, ROUND(SUM(SALEITEM.SALEPRICE),2) AS "TOTAL SALES", 
			((ROUND(SUM(SALEITEM.SALEPRICE),2)) / (SELECT SUM(SALEITEM.SALEPRICE)
											FROM PET..SALEITEM )*100)  AS "PCTSALES"
											
FROM		PET..EMPLOYEE INNER JOIN PET..SALE ON EMPLOYEE.EMPLOYEEID=SALE.EMPLOYEEID
					   INNER JOIN PET..SALEITEM ON SALE.SALEID=SALEITEM.SALEID
GROUP BY	EMPLOYEE.EMPLOYEEID, EMPLOYEE.LASTNAME
ORDER BY	EMPLOYEE.EMPLOYEEID


--#6
CREATE VIEW		[NUMBER6] AS
SELECT			SUPPLIER.SUPPLIERID, SUPPLIER.NAME, ORDERITEM.PONUMBER, 
				((MERCHANDISEORDER.SHIPPINGCOST)/SUM(ORDERITEM.COST))*100 AS "AVERAGESHIPPINGCOST"

FROM			PET..SUPPLIER INNER JOIN PET..MERCHANDISEORDER ON SUPPLIER.SUPPLIERID=MERCHANDISEORDER.SUPPLIERID
				INNER JOIN PET..ORDERITEM ON MERCHANDISEORDER.PONUMBER=ORDERITEM.PONUMBER
			
GROUP BY		SUPPLIER.SUPPLIERID, SUPPLIER.NAME, ORDERITEM.PONUMBER, MERCHANDISEORDER.SHIPPINGCOST
		-----------------
		
CREATE VIEW		[NUMBER 6a] AS

SELECT			SUPPLIERID, NAME, ROUND(AVG("AVERAGESHIPPINGCOST"),2) AS "PCTORDER"

FROM			[NUMBER6]

GROUP BY		SUPPLIERID,NAME


		SELECT	*
		FROM	[NUMBER 6a]
		WHERE	PCTORDER=(SELECT MAX(PCTORDER)
						FROM [NUMBER 6a])
						
--#7
CREATE VIEW [ANIMAL-MONEY] AS

SELECT	CUSTOMER.CUSTOMERID, CUSTOMER.LASTNAME, CUSTOMER.FIRSTNAME, SUM(SALEANIMAL.SALEPRICE) AS "SUM OF SALE PRICE"

FROM	PET..CUSTOMER INNER JOIN PET..SALE ON CUSTOMER.CUSTOMERID=SALE.CUSTOMERID
				INNER JOIN PET..SALEANIMAL ON SALE.SALEID=SALEANIMAL.SALEID
				
GROUP BY CUSTOMER.CUSTOMERID, CUSTOMER.LASTNAME, CUSTOMER.FIRSTNAME
----------				
				
CREATE VIEW	[MERCHANDISE-MONEY] AS

SELECT		CUSTOMER.CUSTOMERID, CUSTOMER.LASTNAME, CUSTOMER.FIRSTNAME, SUM(SALEITEM.SALEPRICE) AS "MERCHANDISE TOTAL"

FROM		PET..CUSTOMER INNER JOIN PET..SALE ON CUSTOMER.CUSTOMERID=SALE.CUSTOMERID
				INNER JOIN PET..SALEITEM ON SALE.SALEID=SALEITEM.SALEID
				
GROUP BY CUSTOMER.CUSTOMERID, CUSTOMER.LASTNAME, CUSTOMER.FIRSTNAME
----------


CREATE VIEW [NUMBER-7] AS

SELECT CUSTOMER.CUSTOMERID, CUSTOMER.LASTNAME, CUSTOMER.FIRSTNAME, [MERCHANDISE TOTAL], [SUM OF SALE PRICE], 
			SUM([MERCHANDISE TOTAL]+[SUM OF SALE PRICE]) AS "GRAND TOTAL"

FROM	[ANIMAL-MONEY] INNER JOIN PET..CUSTOMER ON [ANIMAL-MONEY].CUSTOMERID=CUSTOMER.CUSTOMERID
		INNER JOIN [MERCHANDISE-MONEY] ON CUSTOMER.CUSTOMERID=[MERCHANDISE-MONEY].CUSTOMERID			

GROUP BY CUSTOMER.CUSTOMERID, CUSTOMER.LASTNAME, CUSTOMER.FIRSTNAME, [MERCHANDISE TOTAL], [SUM OF SALE PRICE]
		
---------
		
		SELECT *
		FROM [NUMBER-7]
		WHERE "GRAND TOTAL" = (SELECT MAX("GRAND TOTAL")
								FROM [NUMBER-7])
								
--#8
SELECT CUSTOMER.CUSTOMERID, CUSTOMER.LASTNAME, CUSTOMER.FIRSTNAME, SUM(SALEITEM.SALEPRICE) AS "MAYTOTAL" 

FROM	PET..CUSTOMER INNER JOIN PET..SALE ON CUSTOMER.CUSTOMERID=SALE.CUSTOMERID
				INNER JOIN PET..SALEITEM ON SALE.SALEID=SALEITEM.SALEID
				INNER JOIN PET.. MERCHANDISE ON SALEITEM.ITEMID=MERCHANDISE.ITEMID
				
WHERE MONTH(SALE.SALEDATE) = 5 AND CUSTOMER.CUSTOMERID IN
									(SELECT CUSTOMER.CUSTOMERID

									FROM PET..CUSTOMER INNER JOIN PET..SALE ON CUSTOMER.CUSTOMERID=SALE.CUSTOMERID
										INNER JOIN PET..SALEITEM ON SALE.SALEID=SALEITEM.SALEID
										INNER JOIN PET.. MERCHANDISE ON SALEITEM.ITEMID=MERCHANDISE.ITEMID
									WHERE MONTH(SALE.SALEDATE) = 10 
									GROUP BY CUSTOMER.CUSTOMERID
									HAVING SUM(SALEITEM.SALEPRICE) > 50)
GROUP BY CUSTOMER.CUSTOMERID, CUSTOMER.LASTNAME, CUSTOMER.FIRSTNAME

--#9
CREATE VIEW [NUMBER-9] AS
SELECT	MERCHANDISE.DESCRIPTION, MERCHANDISE.ITEMID, SUM(MERCHANDISE.QUANTITYONHAND) AS "SOLD",
			SUM(ORDERITEM.QUANTITY) AS "PURCHASED"

FROM	PET..SALEITEM INNER JOIN PET..MERCHANDISE ON SALEITEM.ITEMID=MERCHANDISE.ITEMID
					INNER JOIN PET..ORDERITEM ON MERCHANDISE.ITEMID=ORDERITEM.ITEMID
					INNER JOIN PET..SALE ON SALE.SALEID=SALEITEM.SALEID

WHERE  DESCRIPTION = 'Dog Food-Can-Premium' AND MERCHANDISE.ITEMID IN (SELECT	MERCHANDISE.ITEMID
															FROM	PET..SALEITEM INNER JOIN PET..MERCHANDISE ON SALEITEM.ITEMID=MERCHANDISE.ITEMID
											INNER JOIN PET..ORDERITEM ON MERCHANDISE.ITEMID=ORDERITEM.ITEMID
											INNER JOIN PET..SALE ON SALE.SALEID=SALEITEM.SALEID
											
											WHERE MONTH(SALE.SALEDATE)1 <> 7)

GROUP BY MERCHANDISE.DESCRIPTION, MERCHANDISE.ITEMID, MERCHANDISE.QUANTITYONHAND

		SELECT DESCRIPTION, ITEMID, PURCHASED, SOLD,(SOLD-PURCHASED) AS "NET INCREASE"
		FROM [NUMBER-9]
		
		
		
--#10
SELECT MERCHANDISE.ITEMID AS "MERCHANDISE.ITEMID", MERCHANDISE.DESCRIPTION,
	 MERCHANDISE.QUANTITYONHAND, ORDERITEM.ITEMID AS "ORDERITEM.ITEMID"

FROM PET..MERCHANDISE FULL OUTER JOIN PET..ORDERITEM ON MERCHANDISE.ITEMID=ORDERITEM.ITEMID
						FULL OUTER JOIN PET..MERCHANDISEORDER ON ORDERITEM.PONUMBER = MERCHANDISEORDER.PONUMBER
							
WHERE QUANTITYONHAND > 500 AND (YEAR(ORDERDATE) <> 2004 OR YEAR(ORDERDATE) IS NULL)


--#11	
SELECT BREED.BREED

FROM PET..SALEANIMAL FULL OUTER JOIN PET..ANIMAL ON SALEANIMAL.ANIMALID=ANIMAL.ANIMALID

					FULL OUTER JOIN PET.. BREED ON ANIMAL.BREED=BREED.BREED


WHERE ANIMAL.CATEGORY = 'DOG' AND ANIMAL.ANIMALID NOT IN 

					(SELECT SALEANIMAL.ANIMALID

					FROM PET..SALEANIMAL

					WHERE ANIMAL.CATEGORY ='DOG')

GROUP BY BREED.BREED


--#12
SELECT B.EMPLOYEEID, B.LASTNAME,B.FIRSTNAME, B.TITLE
FROM PET..EMPLOYEE A INNER JOIN PET..EMPLOYEE B ON A.EMPLOYEEID=B.MANAGERID
WHERE A.LASTNAME ='GIBSON'


--#13 
 CREATE TABLE CATEGORY
 (
	CATEGORY VARCHAR (5),
	LOW INT NOT NULL,
	HIGH INT NOT NULL
 )

INSERT INTO CATEGORY (CATEGORY,LOW,HIGH) VALUES ('WEAK',0,200)
INSERT INTO CATEGORY (CATEGORY,LOW,HIGH) VALUES ('GOOD',200,800)
INSERT INTO CATEGORY (CATEGORY,LOW,HIGH) VALUES ('BEST',800,10000)


--#14						
 CREATE TABLE NUMBER14
 (
	CATEGORY VARCHAR (5),
	LOW INT NOT NULL,
	HIGH INT NOT NULL
 )

INSERT INTO NUMBER14 (CATEGORY,LOW,HIGH) VALUES ('WEAK',0,200)
INSERT INTO NUMBER14 (CATEGORY,LOW,HIGH) VALUES ('GOOD',200,800)
INSERT INTO NUMBER14 (CATEGORY,LOW,HIGH) VALUES ('BEST',800,10000)
							
SELECT [NUMBER-7].CUSTOMERID, [NUMBER-7].LASTNAME, [NUMBER-7].FIRSTNAME,[NUMBER-7].[GRAND TOTAL], NUMBER14.CATEGORY

FROM [NUMBER-7] INNER JOIN NUMBER14 ON [NUMBER-7].[GRAND TOTAL] >= NUMBER14.LOW AND [NUMBER-7].[GRAND TOTAL] <HIGH

--#15
SELECT	NAME,  'SOLD US ANIMALS IN JUNE' AS [TYPE OF SALE]
FROM	PET..SUPPLIER INNER JOIN PET..ANIMALORDER ON SUPPLIER.SUPPLIERID=ANIMALORDER.SUPPLIERID
WHERE MONTH(ANIMALORDER.ORDERDATE) = 6
				UNION
SELECT	NAME, 'SOLD US MERCHANDISE IN JUNE' AS [TYPE OF SALE]
FROM	PET..SUPPLIER INNER JOIN PET..MERCHANDISEORDER ON SUPPLIER.SUPPLIERID=MERCHANDISEORDER.SUPPLIERID
WHERE	MONTH(MERCHANDISEORDER.ORDERDATE) = 6 


--#16
SELECT	STATE, SUM([NUMBER-7].[MERCHANDISE TOTAL]) AS "ANIMALSALES",SUM([NUMBER-7].[SUM OF SALE PRICE]) AS "MERCHANDISESALES"

FROM	PET..CITY INNER JOIN PET..CUSTOMER ON CITY.CITYID=CUSTOMER.CITYID
		INNER JOIN [NUMBER-7] ON CUSTOMER.CUSTOMERID =[NUMBER-7].CUSTOMERID

WHERE [NUMBER-7].[SUM OF SALE PRICE]> ([NUMBER-7].[MERCHANDISE TOTAL]*7)

GROUP BY  CITY.STATE

--#17
UPDATE CATEGORY
SET HIGH = 400
WHERE CATEGORY='WEAK'

--#18
DELETE FROM CATEGORY
WHERE CATEGORY = 'WEAK'

--#19
SELECT *
INTO EMPLOYEECOPY
FROM PET..EMPLOYEE
-------

DELETE FROM EMPLOYEECOPY

---------

INSERT INTO EMPLOYEECOPY (EMPLOYEEID, LASTNAME, FIRSTNAME, PHONE, ADDRESS, ZIPCODE, CITYID, 
		TAXPAYERID, DATEHIRED, DATERELEASED, MANAGERID, EMPLOYEELEVEL, TITLE)

SELECT EMPLOYEEID, LASTNAME, FIRSTNAME, PHONE, ADDRESS, ZIPCODE, CITYID, 
		TAXPAYERID, DATEHIRED, DATERELEASED, MANAGERID, EMPLOYEELEVEL, TITLE

FROM PET..EMPLOYEE



