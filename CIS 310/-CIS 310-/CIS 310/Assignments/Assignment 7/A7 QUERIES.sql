--1. List the products with a list price greater than the average list price of all products.
USE CIS310A7
SELECT	ITEMID, DESCRIPTION, LISTPRICE
FROM	MERCHANDISE
WHERE	LISTPRICE >
		(
		SELECT AVG(LISTPRICE)
		FROM MERCHANDISE
		)

--2. On average, which sold in less time: male cats or female cats? 
--The difference in days between order date and sale date determines what gender sold in less time. List the average time it takes to sell each gender.
SELECT		A.GENDER, AVG(DATEDIFF(DD,AO.ORDERDATE,S.SALEDATE)) AS [DELAY IN DAYS]
FROM		ANIMALORDER AO INNER JOIN ANIMALORDERITEM AOI ON AO.ORDERID = AOI.ORDERID
			INNER JOIN ANIMAL A ON AOI.ANIMALID = A.ANIMALID
			INNER JOIN SALEANIMAL SA ON A.ANIMALID = SA.ANIMALID
			INNER JOIN SALE S ON SA.SALEID = S.SALEID
WHERE		A.CATEGORY = 'CAT'
GROUP BY	A.GENDER

--3. List the cats that took longer than average cats to sell.
SELECT		A.ANIMALID, A.NAME, DATEDIFF(DD,AO.ORDERDATE,S.SALEDATE) AS [DELAY]
FROM		ANIMALORDER AO INNER JOIN ANIMALORDERITEM AOI ON AO.ORDERID = AOI.ORDERID
			INNER JOIN ANIMAL A ON AOI.ANIMALID = A.ANIMALID
			INNER JOIN SALEANIMAL SA ON A.ANIMALID = SA.ANIMALID
			INNER JOIN SALE S ON SA.SALEID = S.SALEID
WHERE		CATEGORY = 'CAT' AND (DATEDIFF(DD,AO.ORDERDATE,S.SALEDATE)) > 
			(
			SELECT	AVG(DATEDIFF(DD,AO.ORDERDATE,S.SALEDATE))
			FROM	ANIMALORDER AO INNER JOIN ANIMALORDERITEM AOI ON AO.ORDERID = AOI.ORDERID
					INNER JOIN ANIMAL A ON AOI.ANIMALID = A.ANIMALID
					INNER JOIN SALEANIMAL SA ON A.ANIMALID = SA.ANIMALID
					INNER JOIN SALE S ON SA.SALEID = S.SALEID
			WHERE A.CATEGORY = 'CAT'
			)
ORDER BY	A.ANIMALID

--4. Which merchandise items have an average sale price more than 50 percent higher than their average purchase cost?
USE CIS31007
CREATE VIEW	ITEMDETAIL AS 
SELECT		M.ITEMID, M.DESCRIPTION, 
			ROUND(AVG(OI.COST),2) AS [AvgOfCost], 
			ROUND(AVG(SI.SALEPRICE),2) AS [AvgOfSalePrice]
FROM		CIS310A7..ORDERITEM OI INNER JOIN CIS310A7..MERCHANDISE M ON OI.ITEMID = M.ITEMID
			INNER JOIN CIS310A7..SALEITEM SI ON M.ITEMID = SI.ITEMID
GROUP BY	M.ITEMID, M.DESCRIPTION

SELECT		*
FROM		ITEMDETAIL			
WHERE		AVGOFSALEPRICE > (AVGOFCOST *1.5)

--5. List the employees and their total merchandise sales expressed as a percentage of total merchandise sales for all employees.
USE	CIS310A7
SELECT		E.EMPLOYEEID, E.LASTNAME, SUM(SI.SALEPRICE) AS [TOTALSALES], 
			((SUM(SI.SALEPRICE) / (SELECT SUM(SALEPRICE)FROM SALEITEM)) *100) AS [PCTOFSALES]
FROM		EMPLOYEE E INNER JOIN SALE S ON E.EMPLOYEEID = S.EMPLOYEEID
			INNER JOIN SALEITEM SI ON S.SALEID = SI.SALEID
GROUP BY	E.EMPLOYEEID, E.LASTNAME

--6. On average, which supplier charges the highest shipping cost as a percent of the merchandise order total?
USE CIS31007
CREATE VIEW PO_INFORMATION AS
SELECT		MO.PONUMBER, SU.SUPPLIERID, SU.NAME, MO.SHIPPINGCOST / SUM(OI.COST) AS [PCTSHIPOFCOST]
FROM		CIS310A7..SUPPLIER SU INNER JOIN CIS310A7..MERCHANDISEORDER MO ON SU.SUPPLIERID = MO.SUPPLIERID
			INNER JOIN CIS310A7..ORDERITEM OI ON MO.PONUMBER = OI.PONUMBER
GROUP BY	MO.PONUMBER, SU.SUPPLIERID, SU.NAME, MO.SHIPPINGCOST

CREATE VIEW AVGSHIPCOSTPCT AS
SELECT		SUPPLIERID, NAME, AVG(PCTSHIPOFCOST) *100 AS [AVGORDERCOST]
FROM		PO_INFORMATION
GROUP BY	SUPPLIERID, NAME

SELECT	*
FROM	AVGSHIPCOSTPCT
WHERE	AVGORDERCOST = 
		(SELECT MAX(AVGORDERCOST)
		 FROM AVGSHIPCOSTPCT)
		 
--7. Which customer has given us the most total money for animals and merchandise?
USE CIS31007
CREATE VIEW ANIMALSALESTOTALS AS
SELECT		C.CUSTOMERID, SUM(SA.SALEPRICE) AS [TOTALANIMALSALES]
FROM		CIS310A7..CUSTOMER C INNER JOIN CIS310A7..SALE S ON C.CUSTOMERID = S.CUSTOMERID
			INNER JOIN CIS310A7..SALEANIMAL SA ON S.SALEID = SA.SALEID
GROUP BY	C.CUSTOMERID

CREATE VIEW MERCHSALESTOTALS AS
SELECT		C.CUSTOMERID, SUM(SI.SALEPRICE) AS [TOTALMERCHSALES]
FROM		CIS310A7..CUSTOMER C INNER JOIN CIS310A7..SALE S ON C.CUSTOMERID = S.CUSTOMERID
			INNER JOIN CIS310A7..SALEITEM SI ON S.SALEID = SI.SALEID
GROUP BY	C.CUSTOMERID

CREATE VIEW CUSTSALESTOTALS AS
SELECT		C.CUSTOMERID, C.LASTNAME, C.FIRSTNAME, MST.TOTALMERCHSALES, AST.TOTALANIMALSALES,
			SUM(AST.TOTALANIMALSALES + MST.TOTALMERCHSALES) AS [GRANDTOTAL]
FROM		CIS310A7..CUSTOMER C INNER JOIN ANIMALSALESTOTALS AST ON C.CUSTOMERID = AST.CUSTOMERID
			INNER JOIN MERCHSALESTOTALS MST ON AST.CUSTOMERID = MST.CUSTOMERID
GROUP BY	C.CUSTOMERID,C.LASTNAME,C.FIRSTNAME, MST.TOTALMERCHSALES, AST.TOTALANIMALSALES

SELECT	*
FROM	CUSTSALESTOTALS
WHERE	GRANDTOTAL = (SELECT MAX(GRANDTOTAL) 
					  FROM CUSTSALESTOTALS)

--8. Which customers who bought more than $100 in merchandise in May also spent more than $50 on merchandise in October?
USE CIS310A7
SELECT		C.CUSTOMERID, C.LASTNAME, C.FIRSTNAME, SUM(SI.SALEPRICE) AS [MAYTOTAL]
FROM		CUSTOMER C INNER JOIN SALE S ON C.CUSTOMERID = S.CUSTOMERID
			INNER JOIN SALEITEM SI ON S.SALEID = SI.SALEID
WHERE		MONTH(S.SALEDATE) = 5 AND
			C.CUSTOMERID IN 
			(SELECT		C.CUSTOMERID
			 FROM		CUSTOMER C INNER JOIN SALE S ON C.CUSTOMERID = S.CUSTOMERID
						INNER JOIN SALEITEM SI ON S.SALEID = SI.SALEID
			 WHERE		MONTH(S.SALEDATE) = 10
			 GROUP BY	C.CUSTOMERID
			 HAVING		SUM(SI.SALEPRICE) > 50)
GROUP BY	 C.CUSTOMERID, C.LASTNAME, C.FIRSTNAME
HAVING		 SUM(SI.SALEPRICE) > 100	

--9. List the customers who bought dogs in the first quarter and also bought dog food in the fourth quarter.
USE CIS310A7
SELECT		C.CUSTOMERID, C.LASTNAME, C.FIRSTNAME, S.SALEDATE, A.CATEGORY
FROM		ANIMAL A INNER JOIN SALEANIMAL SA ON A.ANIMALID = SA.ANIMALID
			INNER JOIN SALE S ON SA.SALEID = S.SALEID
			INNER JOIN CUSTOMER C ON S.CUSTOMERID = C.CUSTOMERID
			INNER JOIN SALEITEM SI ON S.SALEID = SI.SALEID
			INNER JOIN MERCHANDISE M ON SI.ITEMID = M.ITEMID
WHERE		A.CATEGORY = 'DOG' 
			AND MONTH(S.SALEDATE) BETWEEN 1 AND 3
			AND C.CUSTOMERID IN
			(SELECT	C.CUSTOMERID
			 FROM	ANIMAL A INNER JOIN SALEANIMAL SA ON A.ANIMALID = SA.ANIMALID
					INNER JOIN SALE S ON SA.SALEID = S.SALEID
					INNER JOIN CUSTOMER C ON S.CUSTOMERID = C.CUSTOMERID
					INNER JOIN SALEITEM SI ON S.SALEID = SI.SALEID
					INNER JOIN MERCHANDISE M ON SI.ITEMID = M.ITEMID 
			 WHERE	M.DESCRIPTION LIKE 'DOG FOOD%' AND (MONTH(S.SALEDATE) BETWEEN 10 AND 12))		
GROUP BY	C.CUSTOMERID, C.LASTNAME, C.FIRSTNAME, S.SALEDATE, A.CATEGORY
ORDER BY	S.SALEDATE
	
--10. What was the net change in quantity on hand for premium canned dog food between January 1 and July 1? 
--Could not determine any other way to specify Jan. 1 - July 1 without specifying a specific year.
USE CIS31007
CREATE VIEW PREMIUMDOGFOODPURCH AS
SELECT		SUM(OI.QUANTITY) AS [QUANTITYPURCHASED], M.DESCRIPTION, M.ITEMID
FROM		CIS310A7..MERCHANDISEORDER MO INNER JOIN CIS310A7..ORDERITEM OI ON MO.PONUMBER = OI.PONUMBER
			INNER JOIN CIS310A7..MERCHANDISE M ON OI.ITEMID = M.ITEMID
WHERE		MO.RECEIVEDATE BETWEEN '1/1/2004' AND '7/1/2004'
			AND M.DESCRIPTION LIKE 'DOG FOOD%PREMIUM'
GROUP BY	M.DESCRIPTION, M.ITEMID

CREATE VIEW PREMIUMDOGFOODSOLD AS
SELECT		SUM(SI.QUANTITY) AS [QUANTITYSOLD], M.DESCRIPTION, M.ITEMID
FROM		CIS310A7..MERCHANDISE M INNER JOIN CIS310A7..SALEITEM SI ON M.ITEMID = SI.ITEMID
			INNER JOIN CIS310A7..SALE S ON SI.SALEID = S.SALEID
WHERE		S.SALEDATE BETWEEN '1/1/2004' AND '7/1/2004'
			AND M.DESCRIPTION LIKE 'DOG FOOD%PREMIUM'
GROUP BY	M.DESCRIPTION, M.ITEMID

SELECT		DFP.DESCRIPTION, DFP.ITEMID, DFP.QUANTITYPURCHASED, DFS.QUANTITYSOLD, 
			(SUM(DFP.QUANTITYPURCHASED) - SUM(DFS.QUANTITYSOLD)) AS [NETINCREASE]
FROM		PREMIUMDOGFOODPURCH DFP FULL OUTER JOIN PREMIUMDOGFOODSOLD DFS ON DFP.DESCRIPTION = DFS.DESCRIPTION
GROUP BY	DFP.DESCRIPTION, DFP.ITEMID, DFP.QUANTITYPURCHASED, DFS.QUANTITYSOLD

--11. Which merchandise items with a list price of more than $50 hand no sales July?
USE CIS310A7
SELECT		M.ITEMID, M.DESCRIPTION, M.LISTPRICE
FROM		MERCHANDISE M INNER JOIN SALEITEM SI ON M.ITEMID = SI.ITEMID
			INNER JOIN SALE S ON SI.SALEID = S.SALEID
WHERE		M.LISTPRICE > 50 AND MONTH(S.SALEDATE) <> 7
GROUP BY	M.ITEMID, M.DESCRIPTION, M.LISTPRICE

--12. Which merchandise items with more than 100 units on hand have not been ordered in 2004? Use an outer join to answer the question.
USE CIS310A7
SELECT M.ITEMID AS [Merchandise.ItemId], M.DESCRIPTION, M.QUANTITYONHAND, OI.ITEMID AS [OrderItem.ItemId]
FROM MERCHANDISE M FULL OUTER JOIN ORDERITEM OI ON M.ITEMID = OI.ITEMID
     FULL OUTER JOIN MERCHANDISEORDER MO ON OI.PONUMBER = MO.PONUMBER
WHERE M.QUANTITYONHAND > 100 AND
      (YEAR(MO.ORDERDATE) <> 2004 OR YEAR(MO.ORDERDATE) IS NULL)
      
--13. Which merchandise items with more than 100 units on hand have not been ordered in 2004? Use a subquery to answer the question.
SELECT	M.ITEMID, M.DESCRIPTION, M.QUANTITYONHAND 
FROM	MERCHANDISE M 
WHERE	M.ITEMID IN (SELECT M.ITEMID 
				     FROM MERCHANDISE M INNER JOIN ORDERITEM OI ON M.ITEMID = OI.ITEMID
					 INNER JOIN MERCHANDISEORDER MO ON OI.PONUMBER = MO.PONUMBER 
					 WHERE M.QUANTITYONHAND > 100 AND (YEAR(MO.ORDERDATE) <> 2004 OR YEAR(MO.ORDERDATE) IS NULL)
      
--14. Which cat products with a quantity on hand greater than 500 have not been sold in the month of July?
USE CIS310A7
SELECT		M.ITEMID, M.DESCRIPTION, M.QUANTITYONHAND
FROM		MERCHANDISE M INNER JOIN SALEITEM SI ON M.ITEMID = SI.ITEMID
			INNER JOIN SALE S ON SI.SALEID = S.SALEID
WHERE		M.QUANTITYONHAND > 500 AND
			MONTH(S.SALEDATE) <> 7
GROUP BY	M.ITEMID, M.DESCRIPTION, M.QUANTITYONHAND

--15. Which dog breeds have never been sold at the pet store? Use an outer join to answer the question.
USE CIS31007
CREATE VIEW DOGBREEDSSOLD AS
SELECT		A.BREED
FROM		CIS310A7..ANIMAL A RIGHT JOIN CIS310A7..SALEANIMAL SA ON A.ANIMALID = SA.ANIMALID
WHERE		A.CATEGORY = 'DOG'
GROUP BY	A.BREED

SELECT	B.BREED
FROM	CIS310A7..BREED B LEFT JOIN DOGBREEDSSOLD DBS ON B.BREED = DBS.BREED
WHERE	B.CATEGORY = 'DOG' AND B.BREED NOT IN 
		(SELECT	* 
		 FROM	DOGBREEDSSOLD)

--16. Which dog breeds have never been sold at the pet store? Use a subquery to answer the question.
USE	CIS310A7
SELECT	BREED
FROM	BREED
WHERE	CATEGORY = 'DOG' AND
		BREED NOT IN
		(SELECT		A.BREED
		 FROM		ANIMAL A INNER JOIN SALEANIMAL SA ON A.ANIMALID = SA.ANIMALID
		 WHERE		A.CATEGORY = 'DOG'
		 GROUP BY	A.BREED)

--17. List the employees who report to Gibson.
USE	CIS310A7
SELECT	MANAGER.LASTNAME AS [MANAGERLASTNAME], EE.EMPLOYEEID, EE.LASTNAME AS [EMPLOYEELASTNAME], EE.FIRSTNAME, EE.TITLE
FROM	EMPLOYEE EE INNER JOIN EMPLOYEE MANAGER ON EE.MANAGERID = MANAGER.EMPLOYEEID
WHERE	MANAGER.LASTNAME = 'GIBSON'
	
--18. Save a query to answer Exercise 7: total amount of money spent by each customer. 
--	  Create the table shown to categorize customers based on sales. 
--    Write a query that lists each customer from the first query and displays the proper label. May use views.
USE CIS31007
CREATE TABLE	CUSTCATEGORY
(
	CATEGORY VARCHAR(10),
	LOW INT NOT NULL,
	HIGH INT NOT NULL
)
INSERT INTO CUSTCATEGORY (CATEGORY, LOW, HIGH)
VALUES ('Weak', 0, 200)
INSERT INTO CUSTCATEGORY (CATEGORY, LOW, HIGH)
VALUES ('Good', 200, 800)
INSERT INTO CUSTCATEGORY (CATEGORY, LOW, HIGH)
VALUES ('Best', 800, 10000)

SELECT CST.CUSTOMERID, CST.LASTNAME, CST.FIRSTNAME, CST.GRANDTOTAL, CC.CATEGORY
FROM CUSTSALESTOTALS CST INNER JOIN CUSTCATEGORY CC ON CST.GRANDTOTAL >= CC.LOW AND CST.GRANDTOTAL < CC.HIGH
GROUP BY CST.CUSTOMERID, CST.LASTNAME, CST.FIRSTNAME, CST.GRANDTOTAL, CC.CATEGORY
ORDER BY CC.CATEGORY DESC

--19. List all suppliers (animals and merchandise) who sold us items in June. Identify whether they sold use animals or merchandise.
USE CIS310A7
SELECT S.SUPPLIERID, S.NAME, AO.ORDERID, 'ANIMAL' AS [ITEM PURCHASED]
FROM SUPPLIER S INNER JOIN ANIMALORDER AO ON S.SUPPLIERID = AO.SUPPLIERID
WHERE MONTH(AO.ORDERDATE) = 6
UNION
SELECT S.SUPPLIERID, S.NAME, MO.PONUMBER, 'MERCH' AS [ITEM PURCHASED]
FROM SUPPLIER S INNER JOIN MERCHANDISEORDER MO ON S.SUPPLIERID = MO.SUPPLIERID
WHERE MONTH(MO.ORDERDATE) = 6

--20. List the states for which our customers have spent more than seven times as much money on animals than on merchandise (in total).
USE CIS31007
SELECT		CY.STATE, SUM(CST.TOTALANIMALSALES) AS [ANIMALSALES], SUM(CST.TOTALMERCHSALES) AS [MERCHSALES]
FROM		CUSTSALESTOTALS CST INNER JOIN CIS310A7..CUSTOMER C ON CST.CUSTOMERID = C.CUSTOMERID
			INNER JOIN CIS310A7..CITY CY ON C.CITYID = CY.CITYID
GROUP BY	CY.STATE
HAVING		SUM(CST.TOTALANIMALSALES) > (7 * SUM(CST.TOTALMERCHSALES))

--21. Write a query to create the table shown in Exercise 18.
CREATE TABLE	CUSTCATEGORY
(
	CATEGORY VARCHAR(10),
	LOW INT NOT NULL,
	HIGH INT NOT NULL
)
SELECT *
FROM	CUSTCATEGORY

--22. Write a query to insert the first row of data for the table in Exercise 18.
INSERT INTO CUSTCATEGORY (CATEGORY, LOW, HIGH)
VALUES ('Weak', 0, 200)

--23. Write a query to change the High value to 400 in the first row of the table in Exercise 18.
USE CIS31007
UPDATE	CUSTCATEGORY
SET		HIGH = 400
WHERE	CATEGORY = 'Weak'

--24. Create a query to delete the first row of the table in Exercise 18.
DELETE FROM CUSTCATEGORY
WHERE		CATEGORY = 'Weak'

--25. Create a copy of the Employee table structure. Use a delete query to remove all data from the copy.Write a query to copy from the original employee table into the new one.
USE CIS31007
SELECT	*
INTO	EMPLOYEE_COPY
FROM	CIS310A7..EMPLOYEE

DELETE FROM	EMPLOYEE_COPY

SET IDENTITY_INSERT EMPLOYEE_COPY ON
INSERT INTO EMPLOYEE_COPY (EMPLOYEEID, LASTNAME, FIRSTNAME, PHONE, ADDRESS, ZIPCODE, CITYID, TAXPAYERID, DATEHIRED, DATERELEASED, MANAGERID, EMPLOYEELEVEL, TITLE)
SELECT EMPLOYEEID, LASTNAME, FIRSTNAME, PHONE, ADDRESS, ZIPCODE, CITYID, TAXPAYERID, DATEHIRED, DATERELEASED, MANAGERID, EMPLOYEELEVEL, TITLE
FROM CIS310A7..EMPLOYEE

SELECT *
FROM	EMPLOYEE_COPY
