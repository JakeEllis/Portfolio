-- =============================================
-- Author:                <LESLIE DAWSON>
-- Create date:			  <MARCH 30, 2011>
-- Description:           <A8 STORED PROCEDURE>
-- =============================================
ALTER PROCEDURE UPDATEDCUSTBAL              
       -- Add the parameters for the stored procedure here
AS
BEGIN
   -- Insert statements for procedure here
BEGIN
 DECLARE @CUS_CODE VARCHAR(5)
 DECLARE @CUS_BALANCE MONEY
 
 DECLARE	A8_CURSOR CURSOR FOR
 SELECT		C.CUS_CODE, SUM(CH.CHAR_DISTANCE * M.MOD_CHG_MILE) AS [CUSTOMER BALANCE]
 FROM		CUSTOMER C INNER JOIN CHARTER CH ON C.CUS_CODE = CH.CUS_CODE
            INNER JOIN AIRCRAFT A ON CH.AC_NUMBER = A.AC_NUMBER
            INNER JOIN MODEL M ON A.MOD_CODE = M.MOD_CODE
 GROUP BY	C.CUS_CODE
  
 OPEN A8_CURSOR
 FETCH NEXT FROM A8_CURSOR INTO @CUS_CODE, @CUS_BALANCE
 WHILE(@@FETCH_STATUS = 0)
 BEGIN
      UPDATE CUSTOMER
      SET CUS_BALANCE = @CUS_BALANCE
      WHERE CUS_CODE = @CUS_CODE
      FETCH NEXT FROM A8_CURSOR INTO @CUS_CODE, @CUS_BALANCE
 END
 
CLOSE A8_CURSOR
DEALLOCATE A8_CURSOR
END
	BEGIN
	SELECT	CUS_CODE, CUS_BALANCE AS [CUSTOMER BALANCE]
	FROM	CUSTOMER
    END
END

EXEC UPDATEDCUSTBAL


-- =============================================
-- Author:		<LESLIE DAWSON>
-- Create date: <3/29/2011>
-- Description:	<A8 TRIGGER>
-- =============================================
ALTER TRIGGER A8
   ON  CHARTER
   AFTER INSERT,DELETE,UPDATE
AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;

    -- Insert statements for trigger here

    	DECLARE @DIST_CHANGE DEC
	DECLARE @CHAR_TRIP VARCHAR(5)
	
    IF(EXISTS (SELECT * FROM INSERTED) AND
       EXISTS (SELECT * FROM DELETED))
    BEGIN
        SELECT	@CHAR_TRIP = I.CHAR_TRIP, @DIST_CHANGE = (I.CHAR_DISTANCE-D.CHAR_DISTANCE)
        FROM	INSERTED I INNER JOIN DELETED D ON I.CHAR_TRIP = D.CHAR_TRIP
        
        UPDATE	CHARTER
        SET		CHAR_DISTANCE = @DIST_CHANGE
        WHERE	CHAR_TRIP = @CHAR_TRIP
    END
    
    IF(EXISTS (SELECT * FROM INSERTED) AND
       NOT EXISTS (SELECT * FROM DELETED))
    BEGIN
        SELECT	@CHAR_TRIP = I.CHAR_TRIP, @DIST_CHANGE =  I.CHAR_DISTANCE
        FROM	INSERTED I INNER JOIN DELETED D ON I.CHAR_TRIP = D.CHAR_TRIP
        
        UPDATE	CHARTER
        SET		CHAR_DISTANCE = @DIST_CHANGE
        WHERE	CHAR_TRIP = @CHAR_TRIP
    END
  
    IF(NOT EXISTS (SELECT * FROM INSERTED) AND
       EXISTS (SELECT * FROM DELETED))
    BEGIN
        SELECT 'DELETION'
    END
  
    SELECT    'INSERTED TABLE CONTENT'
    SELECT    *
    FROM    INSERTED

    SELECT    'DELETED TABLE CONTENT'  
    SELECT    *
    FROM    DELETED
END

